// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model products {
  id                 Int            @id @default(autoincrement())
  cod_prod           String         @unique
  nombre_prod        String
  nombre_comun_prod  String
  descripcion_prod   String
  precio_venta_prod  Float
  precio_compra_prod Float
  foto_prod          String
  cantidad_prod      Int
  createdAt          DateTime       @default(now()) @db.Timestamptz
  updatedAt          DateTime       @updatedAt @db.Timestamptz
}

model ids_products {
  id        Int      @id @default(autoincrement())
  cantidad  Int
  createdAt DateTime @default(now()) @db.Timestamptz
  updatedAt DateTime @updatedAt @db.Timestamptz
}

model ids_ventas {
  id        Int      @id @default(autoincrement())
  cantidad  Int
  createdAt DateTime @default(now()) @db.Timestamptz
  updatedAt DateTime @updatedAt @db.Timestamptz
}


model ventas {
  id          Int      @id @default(autoincrement())
  cod_venta   String   @unique
  total_venta Float
  items       items[] // Relación uno a muchos con Item
  createdAt   DateTime @default(now()) @db.Timestamptz
  updatedAt   DateTime @updatedAt @db.Timestamptz
}

model items {
  id              Int      @id @default(autoincrement())
  cod_prod        String   
  nombre_prod     String
  precio_uni_prod Float
  cantidad        Int
  precio_subtot   Float
  venta_id        Int // Llave foránea
  venta           ventas   @relation(fields: [venta_id], references: [id]) // Relación con Venta
  createdAt       DateTime @default(now()) @db.Timestamptz
  updatedAt       DateTime @updatedAt @db.Timestamptz
}
